name: "Code Metrics (On Demand)"

on:
  workflow_dispatch:

jobs:
  analyze:
    name: Run Code Metrics
    runs-on: windows-latest

    permissions:
      contents: read

    defaults:
      run:
        shell: pwsh
        working-directory: src

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.118'

      - name: Create global.json file
        run: |
          @"
          {
            "sdk": { "version": "8.0.118" }
          }
          "@ | Out-File -Encoding utf8 -FilePath global.json
          
      - name: Print versions
        run: |
          dotnet --list-sdks
          dotnet --version
          dotnet msbuild --version

      - name: Export SDK resolver variables for Metrics.exe
        run: |
          $ver  = dotnet --version
          $sdks = Join-Path $env:DOTNET_ROOT "sdk\$ver\Sdks"
          "MSBuildSDKsPath=$sdks"                                | Out-File -FilePath $env:GITHUB_ENV -Append
          "DOTNET_MSBUILD_SDK_RESOLVER_SDKS_DIR=$sdks"           | Out-File -FilePath $env:GITHUB_ENV -Append
          "DOTNET_MSBUILD_SDK_RESOLVER_CLI_DIR=$env:DOTNET_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "MSBuildSDKsPath = $sdks"

      - name: Restore dependencies
        run: dotnet restore DataGEMS.Gateway.sln

      - name: Build solution
        run: dotnet build DataGEMS.Gateway.sln --configuration Release --no-restore

      - name: Run code metrics on compiled assemblies
        run: |
          $metrics = Get-ChildItem "$env:USERPROFILE\.nuget\packages\microsoft.codeanalysis.metrics\*\Metrics\Metrics.exe" -Recurse -ErrorAction SilentlyContinue |
                     Select-Object -First 1 -ExpandProperty FullName
          if (-not $metrics) { throw "Metrics.exe not found in NuGet cache." }
          Write-Host "Using Metrics.exe at: $metrics"

          $targets = @(
            @{ Dll = "DataGEMS.Gateway.Api\bin\Release\net8.0\DataGEMS.Gateway.Api.dll";       Out = "DataGEMS.Gateway.Api\DataGEMS.Gateway.Api.Metrics.xml" },
            @{ Dll = "DataGEMS.Gateway.App\bin\Release\net8.0\DataGEMS.Gateway.App.dll";       Out = "DataGEMS.Gateway.App\DataGEMS.Gateway.App.Metrics.xml" },
            @{ Dll = "DataGEMS.Gateway.Resources\bin\Release\net8.0\DataGEMS.Gateway.Resources.dll"; Out = "DataGEMS.Gateway.Resources\DataGEMS.Gateway.Resources.Metrics.xml" }
          )

          foreach ($t in $targets) {
            if (-not (Test-Path $t.Dll)) { throw "Assembly not found: $($t.Dll). Did the Release build run?" }
            & $metrics /assembly:"$PWD\$($t.Dll)" /out:"$PWD\$($t.Out)" /verbosity:diagnostic
          }

      - name: Upload Metrics XML reports
        uses: actions/upload-artifact@v4
        with:
          name: code-metrics-reports
          path: |
            src/DataGEMS.Gateway.Api/DataGEMS.Gateway.Api.Metrics.xml
            src/DataGEMS.Gateway.App/DataGEMS.Gateway.App.Metrics.xml
            src/DataGEMS.Gateway.Resources/DataGEMS.Gateway.Resources.Metrics.xml
